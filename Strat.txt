Database creation
Relational tables
Insert dummy info
Blog post css style
Create end points


Tables
- Author
    --> authorId
    --> name
    --> email
    --> hashed_password
    -->

- Posts
    --> postId
    --> text
    --> createdAt
    --> description
    --> foreign_key authorId


CREATE TABLE author (
    authorId SERIAL PRIMARY KEY,
    username VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    hashed_password VARCHAR(50) NOT NULL 
); 

CREATE TABLE posts (
    postId SERIAL PRIMARY KEY,
    title TEXT NOT NULL,
    text TEXT NOT NULL,
    description TEXT NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    author INT NOT NULL,
    FOREIGN_KEY (author) REFERENCES (authorId) 
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS jwt_auth (
        author_id INT PRIMARY KEY,
        jwt TEXT,
        CONSTRAIN fk author
        FOREIGN_KEY authorId 
        REFERENCES author(author_id)
        ON DELETE CASCADE
)

CREATE TABLE IF NOT EXISTS comments (
    commentId SERIAL PRIMARY KEY,
    post INT NOT NULL,
    author INT NOT NULL 

    FOREIGN_KEY (post_id) REFERENCES posts(post_id) 
    FOREIGN_KEY (author) REFERENCES author(author_id) 
    ON DELETE CASCADE
)

Post text --> will need a table that will only have the content(TEXT) of the post. It will faster to load the home page and the search result, hitting the database to search only if READ MORE is clicked

// /user/password --> user upgrade password


// convertIdToUsername --> In large scale will hit the database to many times -- find alternative

